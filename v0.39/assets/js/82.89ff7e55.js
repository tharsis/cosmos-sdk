(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{707:function(g,I,l){"use strict";l.r(I);var c=l(1),C=Object(c.a)({},(function(){var g=this,I=g.$createElement,l=g._self._c||I;return l("ContentSlotsDistributor",{attrs:{"slot-key":g.$parent.slotKey}},[l("h1",{attrs:{id:"accounts"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#accounts"}},[g._v("#")]),g._v(" Accounts")]),g._v(" "),l("h2",{attrs:{hide:"",id:"pre-requisite-readings"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisite-readings"}},[g._v("#")]),g._v(" Pre-requisite Readings")]),g._v(" "),l("ul",[l("li",{attrs:{prereq:""}},[l("RouterLink",{attrs:{to:"/basics/app-anatomy.html"}},[g._v("Anatomy of an SDK Application")])],1)]),g._v(" "),l("h2",{attrs:{id:"account-definition"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#account-definition"}},[g._v("#")]),g._v(" Account Definition")]),g._v(" "),l("p",[g._v("In the Cosmos SDK, an "),l("em",[g._v("account")]),g._v(" designates a pair of "),l("em",[g._v("public key")]),g._v(" "),l("code",[g._v("PubKey")]),g._v(" and "),l("em",[g._v("private key")]),g._v(" "),l("code",[g._v("PrivKey")]),g._v(". The "),l("code",[g._v("PubKey")]),g._v(" can be derived to generate various "),l("code",[g._v("Addresses")]),g._v(", which are used to identify users (among other parties) in the application. "),l("code",[g._v("Addresses")]),g._v(" are also associated with "),l("RouterLink",{attrs:{to:"/building-modules/messages-and-queries.html#messages"}},[l("code",[g._v("message")]),g._v("s")]),g._v(" to identify the sender of the "),l("code",[g._v("message")]),g._v(". The "),l("code",[g._v("PrivKey")]),g._v(" is used to generate "),l("a",{attrs:{href:"#signatures"}},[g._v("digital signatures")]),g._v(" to prove that an "),l("code",[g._v("Address")]),g._v(" associated with the "),l("code",[g._v("PrivKey")]),g._v(" approved of a given "),l("code",[g._v("message")]),g._v(".")],1),g._v(" "),l("p",[g._v("To derive "),l("code",[g._v("PubKey")]),g._v("s and "),l("code",[g._v("PrivKey")]),g._v("s, the Cosmos SDK uses a standard called "),l("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[g._v("BIP32"),l("OutboundLink")],1),g._v(". This standard defines how to build an HD wallet, where a wallet is a set of accounts. At the core of every account, there is a seed, which takes the form of a 12 or 24-words mnemonic. From this mnemonic, it is possible to derive any number of "),l("code",[g._v("PrivKey")]),g._v("s using one-way cryptographic function. Then, a "),l("code",[g._v("PubKey")]),g._v(" can be derived from the "),l("code",[g._v("PrivKey")]),g._v(". Naturally, the mnemonic is the most sensitive information, as private keys can always be re-generated if the mnemonic is preserved.")]),g._v(" "),l("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"ICAgICBBY2NvdW50IDAgICAgICAgICAgICAgICAgICAgICAgICAgQWNjb3VudCAxICAgICAgICAgICAgICAgICAgICAgICAgIEFjY291bnQgMgoKKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLSsKfCAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgIHwKfCAgICBBZGRyZXNzIDAgICAgIHwgICAgICAgICAgICAgIHwgICAgQWRkcmVzcyAxICAgICB8ICAgICAgICAgICAgICAgfCAgICBBZGRyZXNzIDIgICAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgKyAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICsgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgKyAgICAgICAgIHwKfCAgUHVibGljIGtleSAwICAgIHwgICAgICAgICAgICAgIHwgIFB1YmxpYyBrZXkgMSAgICB8ICAgICAgICAgICAgICAgfCAgUHVibGljIGtleSAyICAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgfCAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgfCAgICAgICAgIHwKfCAgICAgICAgKyAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgICsgICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgKyAgICAgICAgIHwKfCAgUHJpdmF0ZSBrZXkgMCAgIHwgICAgICAgICAgICAgIHwgIFByaXZhdGUga2V5IDEgICB8ICAgICAgICAgICAgICAgfCAgUHJpdmF0ZSBrZXkgMiAgIHwKfCAgICAgICAgXiAgICAgICAgIHwgICAgICAgICAgICAgIHwgICAgICAgIF4gICAgICAgICB8ICAgICAgICAgICAgICAgfCAgICAgICAgXiAgICAgICAgIHwKKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLSsKICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tKy0tLS0tLS0tLSsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIE1hc3RlciBQcml2S2V5ICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0rCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0rLS0tLS0tLS0tKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTW5lbW9uaWMgKFNlZWQpICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLSsK"}}),g._v(" "),l("p",[g._v("In the Cosmos SDK, accounts are stored and managed via an object called a "),l("a",{attrs:{href:"#keybase"}},[l("code",[g._v("Keybase")])]),g._v(".")]),g._v(" "),l("h2",{attrs:{id:"keybase"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#keybase"}},[g._v("#")]),g._v(" Keybase")]),g._v(" "),l("p",[g._v("A "),l("code",[g._v("Keybase")]),g._v(" is an object that stores and manages accounts. In the Cosmos SDK, a "),l("code",[g._v("Keybase")]),g._v(" implementation follows the "),l("code",[g._v("Keybase")]),g._v(" interface:")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gS2V5YmFzZSBleHBvc2VzIG9wZXJhdGlvbnMgb24gYSBnZW5lcmljIGtleXN0b3JlCnR5cGUgS2V5YmFzZSBpbnRlcmZhY2UgewoJLy8gQ1JVRCBvbiB0aGUga2V5c3RvcmUKCUxpc3QoKSAoW11JbmZvLCBlcnJvcikKCS8vIEdldCByZXR1cm5zIHRoZSBwdWJsaWMgaW5mb3JtYXRpb24gYWJvdXQgb25lIGtleS4KCUdldChuYW1lIHN0cmluZykgKEluZm8sIGVycm9yKQoJLy8gR2V0IHBlcmZvcm1zIGEgYnktYWRkcmVzcyBsb29rdXAgYW5kIHJldHVybnMgdGhlIHB1YmxpYwoJLy8gaW5mb3JtYXRpb24gYWJvdXQgb25lIGtleSBpZiB0aGVyZSdzIGFueS4KCUdldEJ5QWRkcmVzcyhhZGRyZXNzIHR5cGVzLkFjY0FkZHJlc3MpIChJbmZvLCBlcnJvcikKCS8vIERlbGV0ZSByZW1vdmVzIGEga2V5LgoJRGVsZXRlKG5hbWUsIHBhc3NwaHJhc2Ugc3RyaW5nLCBza2lwUGFzcyBib29sKSBlcnJvcgoJLy8gU2lnbiBieXRlcywgbG9va2luZyB1cCB0aGUgcHJpdmF0ZSBrZXkgdG8gdXNlLgoJU2lnbihuYW1lLCBwYXNzcGhyYXNlIHN0cmluZywgbXNnIFtdYnl0ZSkgKFtdYnl0ZSwgY3J5cHRvLlB1YktleSwgZXJyb3IpCgoJLy8gQ3JlYXRlTW5lbW9uaWMgZ2VuZXJhdGVzIGEgbmV3IG1uZW1vbmljLCBkZXJpdmVzIGEgaGllcmFyY2hpY2FsIGRldGVybWluaXN0aWMKCS8vIGtleSBmcm9tIHRoYXQuIGFuZCBwZXJzaXN0cyBpdCB0byBzdG9yYWdlLCBlbmNyeXB0ZWQgdXNpbmcgdGhlIHByb3ZpZGVkIHBhc3N3b3JkLgoJLy8gSXQgcmV0dXJucyB0aGUgZ2VuZXJhdGVkIG1uZW1vbmljIGFuZCB0aGUga2V5IEluZm8uIEl0IHJldHVybnMgYW4gZXJyb3IgaWYgaXQgZmFpbHMgdG8KCS8vIGdlbmVyYXRlIGEga2V5IGZvciB0aGUgZ2l2ZW4gYWxnbyB0eXBlLCBvciBpZiBhbm90aGVyIGtleSBpcyBhbHJlYWR5IHN0b3JlZCB1bmRlciB0aGUKCS8vIHNhbWUgbmFtZS4KCUNyZWF0ZU1uZW1vbmljKG5hbWUgc3RyaW5nLCBsYW5ndWFnZSBMYW5ndWFnZSwgcGFzc3dkIHN0cmluZywgYWxnbyBTaWduaW5nQWxnbykgKGluZm8gSW5mbywgc2VlZCBzdHJpbmcsIGVyciBlcnJvcikKCgkvLyBDcmVhdGVBY2NvdW50IGNvbnZlcnRzIGEgbW5lbW9uaWMgdG8gYSBwcml2YXRlIGtleSB1c2luZyBhIEJJUDQ0IHBhdGggNDQnLzExOCcve2FjY291bnR9Jy8wL3tpbmRleH0KCS8vIGFuZCBwZXJzaXN0cyBpdCwgZW5jcnlwdGVkIHdpdGggdGhlIGdpdmVuIHBhc3N3b3JkLgoJQ3JlYXRlQWNjb3VudChuYW1lLCBtbmVtb25pYywgYmlwMzlQYXNzd2QsIGVuY3J5cHRQYXNzd2Qgc3RyaW5nLCBhY2NvdW50IHVpbnQzMiwgaW5kZXggdWludDMyKSAoSW5mbywgZXJyb3IpCgoJLy8gRGVyaXZlIGNvbXB1dGVzIGEgQklQMzkgc2VlZCBmcm9tIHRoIG1uZW1vbmljIGFuZCBiaXAzOVBhc3N3ZC4KCS8vIERlcml2ZSBwcml2YXRlIGtleSBmcm9tIHRoZSBzZWVkIHVzaW5nIHRoZSBCSVA0NCBwYXJhbXMuCgkvLyBFbmNyeXB0IHRoZSBrZXkgdG8gZGlzayB1c2luZyBlbmNyeXB0UGFzc3dkLgoJLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9pc3N1ZXMvMjA5NQoJRGVyaXZlKG5hbWUsIG1uZW1vbmljLCBiaXAzOVBhc3N3ZCwgZW5jcnlwdFBhc3N3ZCBzdHJpbmcsIHBhcmFtcyBoZC5CSVA0NFBhcmFtcykgKEluZm8sIGVycm9yKQoKCS8vIENyZWF0ZUxlZGdlciBjcmVhdGVzLCBzdG9yZXMsIGFuZCByZXR1cm5zIGEgbmV3IExlZGdlciBrZXkgcmVmZXJlbmNlCglDcmVhdGVMZWRnZXIobmFtZSBzdHJpbmcsIGFsZ28gU2lnbmluZ0FsZ28sIGhycCBzdHJpbmcsIGFjY291bnQsIGluZGV4IHVpbnQzMikgKGluZm8gSW5mbywgZXJyIGVycm9yKQoKCS8vIENyZWF0ZU9mZmxpbmUgY3JlYXRlcywgc3RvcmVzLCBhbmQgcmV0dXJucyBhIG5ldyBvZmZsaW5lIGtleSByZWZlcmVuY2UKCUNyZWF0ZU9mZmxpbmUobmFtZSBzdHJpbmcsIHB1YmtleSBjcnlwdG8uUHViS2V5KSAoaW5mbyBJbmZvLCBlcnIgZXJyb3IpCgoJLy8gQ3JlYXRlTXVsdGkgY3JlYXRlcywgc3RvcmVzLCBhbmQgcmV0dXJucyBhIG5ldyBtdWx0c2lnIChvZmZsaW5lKSBrZXkgcmVmZXJlbmNlCglDcmVhdGVNdWx0aShuYW1lIHN0cmluZywgcHVia2V5IGNyeXB0by5QdWJLZXkpIChpbmZvIEluZm8sIGVyciBlcnJvcikKCgkvLyBUaGUgZm9sbG93aW5nIG9wZXJhdGlvbnMgd2lsbCAqb25seSogd29yayBvbiBsb2NhbGx5LXN0b3JlZCBrZXlzCglVcGRhdGUobmFtZSwgb2xkcGFzcyBzdHJpbmcsIGdldE5ld3Bhc3MgZnVuYygpIChzdHJpbmcsIGVycm9yKSkgZXJyb3IKCgkvLyBJbXBvcnQgaW1wb3J0cyBBU0NJSSBhcm1vcmVkIEluZm8gb2JqZWN0cy4KCUltcG9ydChuYW1lIHN0cmluZywgYXJtb3Igc3RyaW5nKSAoZXJyIGVycm9yKQoKCS8vIEltcG9ydFByaXZLZXkgaW1wb3J0cyBhIHByaXZhdGUga2V5IGluIEFTQ0lJIGFybW9yIGZvcm1hdC4KCS8vIEl0IHJldHVybnMgYW4gZXJyb3IgaWYgYSBrZXkgd2l0aCB0aGUgc2FtZSBuYW1lIGV4aXN0cyBvciBhIHdyb25nIGVuY3J5cHRpb24gcGFzc3BocmFzZSBpcwoJLy8gc3VwcGxpZWQuCglJbXBvcnRQcml2S2V5KG5hbWUsIGFybW9yLCBwYXNzcGhyYXNlIHN0cmluZykgZXJyb3IKCgkvLyBJbXBvcnRQdWJLZXkgaW1wb3J0cyBBU0NJSS1hcm1vcmVkIHB1YmxpYyBrZXlzLgoJLy8gU3RvcmUgYSBuZXcgSW5mbyBvYmplY3QgaG9sZGluZyBhIHB1YmxpYyBrZXkgb25seSwgaS5lLiBpdCB3aWxsCgkvLyBub3QgYmUgcG9zc2libGUgdG8gc2lnbiB3aXRoIGl0IGFzIGl0IGxhY2tzIHRoZSBzZWNyZXQga2V5LgoJSW1wb3J0UHViS2V5KG5hbWUgc3RyaW5nLCBhcm1vciBzdHJpbmcpIChlcnIgZXJyb3IpCgoJLy8gRXhwb3J0IGV4cG9ydHMgYW4gSW5mbyBvYmplY3QgaW4gQVNDSUkgYXJtb3JlZCBmb3JtYXQuCglFeHBvcnQobmFtZSBzdHJpbmcpIChhcm1vciBzdHJpbmcsIGVyciBlcnJvcikKCgkvLyBFeHBvcnRQdWJLZXkgcmV0dXJucyBwdWJsaWMga2V5cyBpbiBBU0NJSSBhcm1vcmVkIGZvcm1hdC4KCS8vIFJldHJpZXZlIGEgSW5mbyBvYmplY3QgYnkgaXRzIG5hbWUgYW5kIHJldHVybiB0aGUgcHVibGljIGtleSBpbgoJLy8gYSBwb3J0YWJsZSBmb3JtYXQuCglFeHBvcnRQdWJLZXkobmFtZSBzdHJpbmcpIChhcm1vciBzdHJpbmcsIGVyciBlcnJvcikKCgkvLyBFeHBvcnRQcml2S2V5IHJldHVybnMgYSBwcml2YXRlIGtleSBpbiBBU0NJSSBhcm1vcmVkIGZvcm1hdC4KCS8vIEl0IHJldHVybnMgYW4gZXJyb3IgaWYgdGhlIGtleSBkb2VzIG5vdCBleGlzdCBvciBhIHdyb25nIGVuY3J5cHRpb24gcGFzc3BocmFzZSBpcyBzdXBwbGllZC4KCUV4cG9ydFByaXZLZXkobmFtZSwgZGVjcnlwdFBhc3NwaHJhc2UsIGVuY3J5cHRQYXNzcGhyYXNlIHN0cmluZykgKGFybW9yIHN0cmluZywgZXJyIGVycm9yKQoKCS8vIEV4cG9ydFByaXZhdGVLZXlPYmplY3QgKm9ubHkqIHdvcmtzIG9uIGxvY2FsbHktc3RvcmVkIGtleXMuIFRlbXBvcmFyeSBtZXRob2QgdW50aWwgd2UgcmVkbyB0aGUgZXhwb3J0aW5nIEFQSQoJRXhwb3J0UHJpdmF0ZUtleU9iamVjdChuYW1lIHN0cmluZywgcGFzc3BocmFzZSBzdHJpbmcpIChjcnlwdG8uUHJpdktleSwgZXJyb3IpCgoJLy8gQ2xvc2VEQiBjbG9zZXMgdGhlIGRhdGFiYXNlLgoJQ2xvc2VEQigpCn0="}})],1),g._v(" "),l("p",[g._v("The default implementation of "),l("code",[g._v("Keybase")]),g._v(" of the Cosmos SDK is "),l("code",[g._v("dbKeybase")]),g._v(".")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"cGFja2FnZSBrZXlzCgppbXBvcnQgKAoJJnF1b3Q7Zm10JnF1b3Q7CgkmcXVvdDtyZWZsZWN0JnF1b3Q7CgkmcXVvdDtzdHJpbmdzJnF1b3Q7CgoJJnF1b3Q7Z2l0aHViLmNvbS9wa2cvZXJyb3JzJnF1b3Q7Cgl0bWNyeXB0byAmcXVvdDtnaXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9jcnlwdG8mcXVvdDsKCWNyeXB0b0FtaW5vICZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2NyeXB0by9lbmNvZGluZy9hbWlubyZxdW90OwoJZGJtICZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC90bS1kYiZxdW90OwoKCSZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvY3J5cHRvL2tleXMvaGQmcXVvdDsKCSZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvY3J5cHRvL2tleXMva2V5ZXJyb3ImcXVvdDsKCSZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvY3J5cHRvL2tleXMvbWludGtleSZxdW90OwoJJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcyZxdW90OwopCgp2YXIgXyBLZXliYXNlID0gZGJLZXliYXNle30KCi8vIExhbmd1YWdlIGlzIGEgbGFuZ3VhZ2UgdG8gY3JlYXRlIHRoZSBCSVAgMzkgbW5lbW9uaWMgaW4uCi8vIEN1cnJlbnRseSwgb25seSBlbmdsaXNoIGlzIHN1cHBvcnRlZCB0aG91Z2guCi8vIEZpbmQgYSBsaXN0IG9mIGFsbCBzdXBwb3J0ZWQgbGFuZ3VhZ2VzIGluIHRoZSBCSVAgMzkgc3BlYyAod29yZCBsaXN0cykuCnR5cGUgTGFuZ3VhZ2UgaW50CgovL25vaW5zcGVjdGlvbiBBTEwKY29uc3QgKAoJLy8gRW5nbGlzaCBpcyB0aGUgZGVmYXVsdCBsYW5ndWFnZSB0byBjcmVhdGUgYSBtbmVtb25pYy4KCS8vIEl0IGlzIHRoZSBvbmx5IHN1cHBvcnRlZCBsYW5ndWFnZSBieSB0aGlzIHBhY2thZ2UuCglFbmdsaXNoIExhbmd1YWdlID0gaW90YSArIDEKCS8vIEphcGFuZXNlIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkLgoJSmFwYW5lc2UKCS8vIEtvcmVhbiBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRlZC4KCUtvcmVhbgoJLy8gU3BhbmlzaCBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRlZC4KCVNwYW5pc2gKCS8vIENoaW5lc2VTaW1wbGlmaWVkIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkLgoJQ2hpbmVzZVNpbXBsaWZpZWQKCS8vIENoaW5lc2VUcmFkaXRpb25hbCBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRlZC4KCUNoaW5lc2VUcmFkaXRpb25hbAoJLy8gRnJlbmNoIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkLgoJRnJlbmNoCgkvLyBJdGFsaWFuIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkLgoJSXRhbGlhbgoJYWRkcmVzc1N1ZmZpeCA9ICZxdW90O2FkZHJlc3MmcXVvdDsKCWluZm9TdWZmaXggICAgPSAmcXVvdDtpbmZvJnF1b3Q7CikKCmNvbnN0ICgKCS8vIHVzZWQgZm9yIGRlcml2aW5nIHNlZWQgZnJvbSBtbmVtb25pYwoJRGVmYXVsdEJJUDM5UGFzc3BocmFzZSA9ICZxdW90OyZxdW90OwoKCS8vIGJpdHMgb2YgZW50cm9weSB0byBkcmF3IHdoZW4gY3JlYXRpbmcgYSBtbmVtb25pYwoJZGVmYXVsdEVudHJvcHlTaXplID0gMjU2CikKCnZhciAoCgkvLyBFcnJVbnN1cHBvcnRlZFNpZ25pbmdBbGdvIGlzIHJhaXNlZCB3aGVuIHRoZSBjYWxsZXIgdHJpZXMgdG8gdXNlIGEKCS8vIGRpZmZlcmVudCBzaWduaW5nIHNjaGVtZSB0aGFuIHNlY3AyNTZrMS4KCUVyclVuc3VwcG9ydGVkU2lnbmluZ0FsZ28gPSBlcnJvcnMuTmV3KCZxdW90O3Vuc3VwcG9ydGVkIHNpZ25pbmcgYWxnbzogb25seSBzZWNwMjU2azEgaXMgc3VwcG9ydGVkJnF1b3Q7KQoKCS8vIEVyclVuc3VwcG9ydGVkTGFuZ3VhZ2UgaXMgcmFpc2VkIHdoZW4gdGhlIGNhbGxlciB0cmllcyB0byB1c2UgYQoJLy8gZGlmZmVyZW50IGxhbmd1YWdlIHRoYW4gZW5nbGlzaCBmb3IgY3JlYXRpbmcgYSBtbmVtb25pYyBzZW50ZW5jZS4KCUVyclVuc3VwcG9ydGVkTGFuZ3VhZ2UgPSBlcnJvcnMuTmV3KCZxdW90O3Vuc3VwcG9ydGVkIGxhbmd1YWdlOiBvbmx5IGVuZ2xpc2ggaXMgc3VwcG9ydGVkJnF1b3Q7KQopCgovLyBkYktleWJhc2UgY29tYmluZXMgZW5jcnlwdGlvbiBhbmQgc3RvcmFnZSBpbXBsZW1lbnRhdGlvbiB0byBwcm92aWRlIGEKLy8gZnVsbC1mZWF0dXJlZCBrZXkgbWFuYWdlci4KLy8KLy8gTk9URTogZGJLZXliYXNlIHdpbGwgYmUgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiBrZXlyaW5nS2V5YmFzZS4KdHlwZSBkYktleWJhc2Ugc3RydWN0IHsKCWJhc2UgYmFzZUtleWJhc2UKCWRiICAgZGJtLkRCCn0KCi8vIG5ld0RCS2V5YmFzZSBjcmVhdGVzIGEgbmV3IGRiS2V5YmFzZSBpbnN0YW5jZSB1c2luZyB0aGUgcHJvdmlkZWQgREIgZm9yCi8vIHJlYWRpbmcgYW5kIHdyaXRpbmcga2V5cy4KZnVuYyBuZXdEQktleWJhc2UoZGIgZGJtLkRCKSBLZXliYXNlIHsKCXJldHVybiBkYktleWJhc2V7CgkJYmFzZTogYmFzZUtleWJhc2V7fSwKCQlkYjogICBkYiwKCX0KfQoKLy8gTmV3SW5NZW1vcnkgY3JlYXRlcyBhIHRyYW5zaWVudCBrZXliYXNlIG9uIHRvcCBvZiBpbi1tZW1vcnkgc3RvcmFnZQovLyBpbnN0YW5jZSB1c2VmdWwgZm9yIHRlc3RpbmcgcHVycG9zZXMgYW5kIG9uLXRoZS1mbHkga2V5IGdlbmVyYXRpb24uCmZ1bmMgTmV3SW5NZW1vcnkoKSBLZXliYXNlIHsgcmV0dXJuIG5ld0RCS2V5YmFzZShkYm0uTmV3TWVtREIoKSkgfQoKLy8gQ3JlYXRlTW5lbW9uaWMgZ2VuZXJhdGVzIGEgbmV3IGtleSBhbmQgcGVyc2lzdHMgaXQgdG8gc3RvcmFnZSwgZW5jcnlwdGVkCi8vIHVzaW5nIHRoZSBwcm92aWRlZCBwYXNzd29yZC4gSXQgcmV0dXJucyB0aGUgZ2VuZXJhdGVkIG1uZW1vbmljIGFuZCB0aGUga2V5IEluZm8uCi8vIEl0IHJldHVybnMgYW4gZXJyb3IgaWYgaXQgZmFpbHMgdG8gZ2VuZXJhdGUgYSBrZXkgZm9yIHRoZSBnaXZlbiBrZXkgYWxnb3JpdGhtCi8vIHR5cGUsIG9yIGlmIGFub3RoZXIga2V5IGlzIGFscmVhZHkgc3RvcmVkIHVuZGVyIHRoZSBzYW1lIG5hbWUuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgQ3JlYXRlTW5lbW9uaWMoCgluYW1lIHN0cmluZywgbGFuZ3VhZ2UgTGFuZ3VhZ2UsIHBhc3N3ZCBzdHJpbmcsIGFsZ28gU2lnbmluZ0FsZ28sCikgKGluZm8gSW5mbywgbW5lbW9uaWMgc3RyaW5nLCBlcnIgZXJyb3IpIHsKCglyZXR1cm4ga2IuYmFzZS5DcmVhdGVNbmVtb25pYyhrYiwgbmFtZSwgbGFuZ3VhZ2UsIHBhc3N3ZCwgYWxnbykKfQoKLy8gQ3JlYXRlQWNjb3VudCBjb252ZXJ0cyBhIG1uZW1vbmljIHRvIGEgcHJpdmF0ZSBrZXkgYW5kIHBlcnNpc3RzIGl0LCBlbmNyeXB0ZWQKLy8gd2l0aCB0aGUgZ2l2ZW4gcGFzc3dvcmQuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgQ3JlYXRlQWNjb3VudCgKCW5hbWUsIG1uZW1vbmljLCBiaXAzOVBhc3N3ZCwgZW5jcnlwdFBhc3N3ZCBzdHJpbmcsIGFjY291bnQgdWludDMyLCBpbmRleCB1aW50MzIsCikgKEluZm8sIGVycm9yKSB7CgoJcmV0dXJuIGtiLmJhc2UuQ3JlYXRlQWNjb3VudChrYiwgbmFtZSwgbW5lbW9uaWMsIGJpcDM5UGFzc3dkLCBlbmNyeXB0UGFzc3dkLCBhY2NvdW50LCBpbmRleCkKfQoKLy8gRGVyaXZlIGNvbXB1dGVzIGEgQklQMzkgc2VlZCBmcm9tIHRoIG1uZW1vbmljIGFuZCBiaXAzOVBhc3N3ZC4KZnVuYyAoa2IgZGJLZXliYXNlKSBEZXJpdmUoCgluYW1lLCBtbmVtb25pYywgYmlwMzlQYXNzcGhyYXNlLCBlbmNyeXB0UGFzc3dkIHN0cmluZywgcGFyYW1zIGhkLkJJUDQ0UGFyYW1zLAopIChJbmZvLCBlcnJvcikgewoKCXJldHVybiBrYi5iYXNlLkRlcml2ZShrYiwgbmFtZSwgbW5lbW9uaWMsIGJpcDM5UGFzc3BocmFzZSwgZW5jcnlwdFBhc3N3ZCwgcGFyYW1zKQp9CgovLyBDcmVhdGVMZWRnZXIgY3JlYXRlcyBhIG5ldyBsb2NhbGx5LXN0b3JlZCByZWZlcmVuY2UgdG8gYSBMZWRnZXIga2V5cGFpci4KLy8gSXQgcmV0dXJucyB0aGUgY3JlYXRlZCBrZXkgaW5mbyBhbmQgYW4gZXJyb3IgaWYgdGhlIExlZGdlciBjb3VsZCBub3QgYmUgcXVlcmllZC4KZnVuYyAoa2IgZGJLZXliYXNlKSBDcmVhdGVMZWRnZXIoCgluYW1lIHN0cmluZywgYWxnbyBTaWduaW5nQWxnbywgaHJwIHN0cmluZywgYWNjb3VudCwgaW5kZXggdWludDMyLAopIChJbmZvLCBlcnJvcikgewoKCXJldHVybiBrYi5iYXNlLkNyZWF0ZUxlZGdlcihrYiwgbmFtZSwgYWxnbywgaHJwLCBhY2NvdW50LCBpbmRleCkKfQoKLy8gQ3JlYXRlT2ZmbGluZSBjcmVhdGVzIGEgbmV3IHJlZmVyZW5jZSB0byBhbiBvZmZsaW5lIGtleXBhaXIuIEl0IHJldHVybnMgdGhlCi8vIGNyZWF0ZWQga2V5IGluZm8uCmZ1bmMgKGtiIGRiS2V5YmFzZSkgQ3JlYXRlT2ZmbGluZShuYW1lIHN0cmluZywgcHViIHRtY3J5cHRvLlB1YktleSkgKEluZm8sIGVycm9yKSB7CglyZXR1cm4ga2IuYmFzZS53cml0ZU9mZmxpbmVLZXkoa2IsIG5hbWUsIHB1YiksIG5pbAp9CgovLyBDcmVhdGVNdWx0aSBjcmVhdGVzIGEgbmV3IHJlZmVyZW5jZSB0byBhIG11bHRpc2lnIChvZmZsaW5lKSBrZXlwYWlyLiBJdAovLyByZXR1cm5zIHRoZSBjcmVhdGVkIGtleSBpbmZvLgpmdW5jIChrYiBkYktleWJhc2UpIENyZWF0ZU11bHRpKG5hbWUgc3RyaW5nLCBwdWIgdG1jcnlwdG8uUHViS2V5KSAoSW5mbywgZXJyb3IpIHsKCXJldHVybiBrYi5iYXNlLndyaXRlTXVsdGlzaWdLZXkoa2IsIG5hbWUsIHB1YiksIG5pbAp9CgovLyBMaXN0IHJldHVybnMgdGhlIGtleXMgZnJvbSBzdG9yYWdlIGluIGFscGhhYmV0aWNhbCBvcmRlci4KZnVuYyAoa2IgZGJLZXliYXNlKSBMaXN0KCkgKFtdSW5mbywgZXJyb3IpIHsKCXZhciByZXMgW11JbmZvCgoJaXRlciA6PSBrYi5kYi5JdGVyYXRvcihuaWwsIG5pbCkKCWRlZmVyIGl0ZXIuQ2xvc2UoKQoKCWZvciA7IGl0ZXIuVmFsaWQoKTsgaXRlci5OZXh0KCkgewoJCWtleSA6PSBzdHJpbmcoaXRlci5LZXkoKSkKCgkJLy8gbmVlZCB0byBpbmNsdWRlIG9ubHkga2V5cyBpbiBzdG9yYWdlIHRoYXQgaGF2ZSBhbiBpbmZvIHN1ZmZpeAoJCWlmIHN0cmluZ3MuSGFzU3VmZml4KGtleSwgaW5mb1N1ZmZpeCkgewoJCQlpbmZvLCBlcnIgOj0gdW5tYXJzaGFsSW5mbyhpdGVyLlZhbHVlKCkpCgkJCWlmIGVyciAhPSBuaWwgewoJCQkJcmV0dXJuIG5pbCwgZXJyCgkJCX0KCgkJCXJlcyA9IGFwcGVuZChyZXMsIGluZm8pCgkJfQoJfQoKCXJldHVybiByZXMsIG5pbAp9CgovLyBHZXQgcmV0dXJucyB0aGUgcHVibGljIGluZm9ybWF0aW9uIGFib3V0IG9uZSBrZXkuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgR2V0KG5hbWUgc3RyaW5nKSAoSW5mbywgZXJyb3IpIHsKCWJzIDo9IGtiLmRiLkdldChpbmZvS2V5KG5hbWUpKQoJaWYgbGVuKGJzKSA9PSAwIHsKCQlyZXR1cm4gbmlsLCBrZXllcnJvci5OZXdFcnJLZXlOb3RGb3VuZChuYW1lKQoJfQoKCXJldHVybiB1bm1hcnNoYWxJbmZvKGJzKQp9CgovLyBHZXRCeUFkZHJlc3MgcmV0dXJucyBJbmZvIGJhc2VkIG9uIGEgcHJvdmlkZWQgQWNjQWRkcmVzcy4gQW4gZXJyb3IgaXMgcmV0dXJuZWQKLy8gaWYgdGhlIGFkZHJlc3MgZG9lcyBub3QgZXhpc3QuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgR2V0QnlBZGRyZXNzKGFkZHJlc3MgdHlwZXMuQWNjQWRkcmVzcykgKEluZm8sIGVycm9yKSB7CglpayA6PSBrYi5kYi5HZXQoYWRkcktleShhZGRyZXNzKSkKCWlmIGxlbihpaykgPT0gMCB7CgkJcmV0dXJuIG5pbCwgZm10LkVycm9yZigmcXVvdDtrZXkgd2l0aCBhZGRyZXNzICVzIG5vdCBmb3VuZCZxdW90OywgYWRkcmVzcykKCX0KCglicyA6PSBrYi5kYi5HZXQoaWspCglyZXR1cm4gdW5tYXJzaGFsSW5mbyhicykKfQoKLy8gU2lnbiBzaWducyB0aGUgbXNnIHdpdGggdGhlIG5hbWVkIGtleS4gSXQgcmV0dXJucyBhbiBlcnJvciBpZiB0aGUga2V5IGRvZXNuJ3QKLy8gZXhpc3Qgb3IgdGhlIGRlY3J5cHRpb24gZmFpbHMuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgU2lnbihuYW1lLCBwYXNzcGhyYXNlIHN0cmluZywgbXNnIFtdYnl0ZSkgKHNpZyBbXWJ5dGUsIHB1YiB0bWNyeXB0by5QdWJLZXksIGVyciBlcnJvcikgewoJaW5mbywgZXJyIDo9IGtiLkdldChuYW1lKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuCgl9CgoJdmFyIHByaXYgdG1jcnlwdG8uUHJpdktleQoKCXN3aXRjaCBpIDo9IGluZm8uKHR5cGUpIHsKCWNhc2UgbG9jYWxJbmZvOgoJCWlmIGkuUHJpdktleUFybW9yID09ICZxdW90OyZxdW90OyB7CgkJCWVyciA9IGZtdC5FcnJvcmYoJnF1b3Q7cHJpdmF0ZSBrZXkgbm90IGF2YWlsYWJsZSZxdW90OykKCQkJcmV0dXJuCgkJfQoKCQlwcml2LCBlcnIgPSBtaW50a2V5LlVuYXJtb3JEZWNyeXB0UHJpdktleShpLlByaXZLZXlBcm1vciwgcGFzc3BocmFzZSkKCQlpZiBlcnIgIT0gbmlsIHsKCQkJcmV0dXJuIG5pbCwgbmlsLCBlcnIKCQl9CgoJY2FzZSBsZWRnZXJJbmZvOgoJCXJldHVybiBrYi5iYXNlLlNpZ25XaXRoTGVkZ2VyKGluZm8sIG1zZykKCgljYXNlIG9mZmxpbmVJbmZvLCBtdWx0aUluZm86CgkJcmV0dXJuIGtiLmJhc2UuRGVjb2RlU2lnbmF0dXJlKGluZm8sIG1zZykKCX0KCglzaWcsIGVyciA9IHByaXYuU2lnbihtc2cpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBuaWwsIGVycgoJfQoKCXJldHVybiBzaWcsIHByaXYuUHViS2V5KCksIG5pbAp9CgovLyBFeHBvcnRQcml2YXRlS2V5T2JqZWN0IHJldHVybnMgYSBQcml2S2V5IG9iamVjdCBnaXZlbiB0aGUga2V5IG5hbWUgYW5kCi8vIHBhc3NwaHJhc2UuIEFuIGVycm9yIGlzIHJldHVybmVkIGlmIHRoZSBrZXkgZG9lcyBub3QgZXhpc3Qgb3IgaWYgdGhlIEluZm8gZm9yCi8vIHRoZSBrZXkgaXMgaW52YWxpZC4KZnVuYyAoa2IgZGJLZXliYXNlKSBFeHBvcnRQcml2YXRlS2V5T2JqZWN0KG5hbWUgc3RyaW5nLCBwYXNzcGhyYXNlIHN0cmluZykgKHRtY3J5cHRvLlByaXZLZXksIGVycm9yKSB7CglpbmZvLCBlcnIgOj0ga2IuR2V0KG5hbWUpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCgl2YXIgcHJpdiB0bWNyeXB0by5Qcml2S2V5CgoJc3dpdGNoIGkgOj0gaW5mby4odHlwZSkgewoJY2FzZSBsb2NhbEluZm86CgkJbGluZm8gOj0gaQoJCWlmIGxpbmZvLlByaXZLZXlBcm1vciA9PSAmcXVvdDsmcXVvdDsgewoJCQllcnIgPSBmbXQuRXJyb3JmKCZxdW90O3ByaXZhdGUga2V5IG5vdCBhdmFpbGFibGUmcXVvdDspCgkJCXJldHVybiBuaWwsIGVycgoJCX0KCgkJcHJpdiwgZXJyID0gbWludGtleS5VbmFybW9yRGVjcnlwdFByaXZLZXkobGluZm8uUHJpdktleUFybW9yLCBwYXNzcGhyYXNlKQoJCWlmIGVyciAhPSBuaWwgewoJCQlyZXR1cm4gbmlsLCBlcnIKCQl9CgoJY2FzZSBsZWRnZXJJbmZvLCBvZmZsaW5lSW5mbywgbXVsdGlJbmZvOgoJCXJldHVybiBuaWwsIGVycm9ycy5OZXcoJnF1b3Q7b25seSB3b3JrcyBvbiBsb2NhbCBwcml2YXRlIGtleXMmcXVvdDspCgl9CgoJcmV0dXJuIHByaXYsIG5pbAp9CgpmdW5jIChrYiBkYktleWJhc2UpIEV4cG9ydChuYW1lIHN0cmluZykgKGFybW9yIHN0cmluZywgZXJyIGVycm9yKSB7CglieiA6PSBrYi5kYi5HZXQoaW5mb0tleShuYW1lKSkKCWlmIGJ6ID09IG5pbCB7CgkJcmV0dXJuICZxdW90OyZxdW90OywgZm10LkVycm9yZigmcXVvdDtubyBrZXkgdG8gZXhwb3J0IHdpdGggbmFtZSAlcyZxdW90OywgbmFtZSkKCX0KCglyZXR1cm4gbWludGtleS5Bcm1vckluZm9CeXRlcyhieiksIG5pbAp9CgovLyBFeHBvcnRQdWJLZXkgcmV0dXJucyBwdWJsaWMga2V5cyBpbiBBU0NJSSBhcm1vcmVkIGZvcm1hdC4gSXQgcmV0cmlldmVzIGEgSW5mbwovLyBvYmplY3QgYnkgaXRzIG5hbWUgYW5kIHJldHVybiB0aGUgcHVibGljIGtleSBpbiBhIHBvcnRhYmxlIGZvcm1hdC4KZnVuYyAoa2IgZGJLZXliYXNlKSBFeHBvcnRQdWJLZXkobmFtZSBzdHJpbmcpIChhcm1vciBzdHJpbmcsIGVyciBlcnJvcikgewoJYnogOj0ga2IuZGIuR2V0KGluZm9LZXkobmFtZSkpCglpZiBieiA9PSBuaWwgewoJCXJldHVybiAmcXVvdDsmcXVvdDssIGZtdC5FcnJvcmYoJnF1b3Q7bm8ga2V5IHRvIGV4cG9ydCB3aXRoIG5hbWUgJXMmcXVvdDssIG5hbWUpCgl9CgoJaW5mbywgZXJyIDo9IHVubWFyc2hhbEluZm8oYnopCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4KCX0KCglyZXR1cm4gbWludGtleS5Bcm1vclB1YktleUJ5dGVzKGluZm8uR2V0UHViS2V5KCkuQnl0ZXMoKSksIG5pbAp9CgovLyBFeHBvcnRQcml2S2V5IHJldHVybnMgYSBwcml2YXRlIGtleSBpbiBBU0NJSSBhcm1vcmVkIGZvcm1hdC4KLy8gSXQgcmV0dXJucyBhbiBlcnJvciBpZiB0aGUga2V5IGRvZXMgbm90IGV4aXN0IG9yIGEgd3JvbmcgZW5jcnlwdGlvbiBwYXNzcGhyYXNlCi8vIGlzIHN1cHBsaWVkLgpmdW5jIChrYiBkYktleWJhc2UpIEV4cG9ydFByaXZLZXkobmFtZSBzdHJpbmcsIGRlY3J5cHRQYXNzcGhyYXNlIHN0cmluZywKCWVuY3J5cHRQYXNzcGhyYXNlIHN0cmluZykgKGFybW9yIHN0cmluZywgZXJyIGVycm9yKSB7Cglwcml2LCBlcnIgOj0ga2IuRXhwb3J0UHJpdmF0ZUtleU9iamVjdChuYW1lLCBkZWNyeXB0UGFzc3BocmFzZSkKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiAmcXVvdDsmcXVvdDssIGVycgoJfQoKCXJldHVybiBtaW50a2V5LkVuY3J5cHRBcm1vclByaXZLZXkocHJpdiwgZW5jcnlwdFBhc3NwaHJhc2UpLCBuaWwKfQoKLy8gSW1wb3J0UHJpdktleSBpbXBvcnRzIGEgcHJpdmF0ZSBrZXkgaW4gQVNDSUkgYXJtb3IgZm9ybWF0LiBJdCByZXR1cm5zIGFuCi8vIGVycm9yIGlmIGEga2V5IHdpdGggdGhlIHNhbWUgbmFtZSBleGlzdHMgb3IgYSB3cm9uZyBlbmNyeXB0aW9uIHBhc3NwaHJhc2UgaXMKLy8gc3VwcGxpZWQuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgSW1wb3J0UHJpdktleShuYW1lIHN0cmluZywgYXJtb3Igc3RyaW5nLCBwYXNzcGhyYXNlIHN0cmluZykgZXJyb3IgewoJaWYgXywgZXJyIDo9IGtiLkdldChuYW1lKTsgZXJyID09IG5pbCB7CgkJcmV0dXJuIGVycm9ycy5OZXcoJnF1b3Q7Q2Fubm90IG92ZXJ3cml0ZSBrZXkgJnF1b3Q7ICsgbmFtZSkKCX0KCglwcml2S2V5LCBlcnIgOj0gbWludGtleS5VbmFybW9yRGVjcnlwdFByaXZLZXkoYXJtb3IsIHBhc3NwaHJhc2UpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gZXJyb3JzLldyYXAoZXJyLCAmcXVvdDtjb3VsZG4ndCBpbXBvcnQgcHJpdmF0ZSBrZXkmcXVvdDspCgl9CgoJa2Iud3JpdGVMb2NhbEtleShuYW1lLCBwcml2S2V5LCBwYXNzcGhyYXNlKQoJcmV0dXJuIG5pbAp9CgpmdW5jIChrYiBkYktleWJhc2UpIEltcG9ydChuYW1lIHN0cmluZywgYXJtb3Igc3RyaW5nKSAoZXJyIGVycm9yKSB7CglieiA6PSBrYi5kYi5HZXQoaW5mb0tleShuYW1lKSkKCWlmIGxlbihieikgJmd0OyAwIHsKCQlyZXR1cm4gZXJyb3JzLk5ldygmcXVvdDtDYW5ub3Qgb3ZlcndyaXRlIGRhdGEgZm9yIG5hbWUgJnF1b3Q7ICsgbmFtZSkKCX0KCglpbmZvQnl0ZXMsIGVyciA6PSBtaW50a2V5LlVuYXJtb3JJbmZvQnl0ZXMoYXJtb3IpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4KCX0KCglrYi5kYi5TZXQoaW5mb0tleShuYW1lKSwgaW5mb0J5dGVzKQoJcmV0dXJuIG5pbAp9CgovLyBJbXBvcnRQdWJLZXkgaW1wb3J0cyBBU0NJSS1hcm1vcmVkIHB1YmxpYyBrZXlzLiBTdG9yZSBhIG5ldyBJbmZvIG9iamVjdCBob2xkaW5nCi8vIGEgcHVibGljIGtleSBvbmx5LCBpLmUuIGl0IHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIHNpZ24gd2l0aCBpdCBhcyBpdCBsYWNrcyB0aGUKLy8gc2VjcmV0IGtleS4KZnVuYyAoa2IgZGJLZXliYXNlKSBJbXBvcnRQdWJLZXkobmFtZSBzdHJpbmcsIGFybW9yIHN0cmluZykgKGVyciBlcnJvcikgewoJYnogOj0ga2IuZGIuR2V0KGluZm9LZXkobmFtZSkpCglpZiBsZW4oYnopICZndDsgMCB7CgkJcmV0dXJuIGVycm9ycy5OZXcoJnF1b3Q7Q2Fubm90IG92ZXJ3cml0ZSBkYXRhIGZvciBuYW1lICZxdW90OyArIG5hbWUpCgl9CgoJcHViQnl0ZXMsIGVyciA6PSBtaW50a2V5LlVuYXJtb3JQdWJLZXlCeXRlcyhhcm1vcikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybgoJfQoKCXB1YktleSwgZXJyIDo9IGNyeXB0b0FtaW5vLlB1YktleUZyb21CeXRlcyhwdWJCeXRlcykKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybgoJfQoKCWtiLmJhc2Uud3JpdGVPZmZsaW5lS2V5KGtiLCBuYW1lLCBwdWJLZXkpCglyZXR1cm4KfQoKLy8gRGVsZXRlIHJlbW92ZXMga2V5IGZvcmV2ZXIsIGJ1dCB3ZSBtdXN0IHByZXNlbnQgdGhlIHByb3BlciBwYXNzcGhyYXNlIGJlZm9yZQovLyBkZWxldGluZyBpdCAoZm9yIHNlY3VyaXR5KS4gSXQgcmV0dXJucyBhbiBlcnJvciBpZiB0aGUga2V5IGRvZXNuJ3QgZXhpc3Qgb3IKLy8gcGFzc3BocmFzZXMgZG9uJ3QgbWF0Y2guIFBhc3NwaHJhc2UgaXMgaWdub3JlZCB3aGVuIGRlbGV0aW5nIHJlZmVyZW5jZXMgdG8KLy8gb2ZmbGluZSBhbmQgTGVkZ2VyIC8gSFcgd2FsbGV0IGtleXMuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgRGVsZXRlKG5hbWUsIHBhc3NwaHJhc2Ugc3RyaW5nLCBza2lwUGFzcyBib29sKSBlcnJvciB7CgkvLyB2ZXJpZnkgd2UgaGF2ZSB0aGUgcHJvcGVyIHBhc3N3b3JkIGJlZm9yZSBkZWxldGluZwoJaW5mbywgZXJyIDo9IGtiLkdldChuYW1lKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIGVycgoJfQoKCWlmIGxpbmZvLCBvayA6PSBpbmZvLihsb2NhbEluZm8pOyBvayAmYW1wOyZhbXA7ICFza2lwUGFzcyB7CgkJaWYgXywgZXJyID0gbWludGtleS5VbmFybW9yRGVjcnlwdFByaXZLZXkobGluZm8uUHJpdktleUFybW9yLCBwYXNzcGhyYXNlKTsgZXJyICE9IG5pbCB7CgkJCXJldHVybiBlcnIKCQl9Cgl9CgoJa2IuZGIuRGVsZXRlU3luYyhhZGRyS2V5KGluZm8uR2V0QWRkcmVzcygpKSkKCWtiLmRiLkRlbGV0ZVN5bmMoaW5mb0tleShuYW1lKSkKCglyZXR1cm4gbmlsCn0KCi8vIFVwZGF0ZSBjaGFuZ2VzIHRoZSBwYXNzcGhyYXNlIHdpdGggd2hpY2ggYW4gYWxyZWFkeSBzdG9yZWQga2V5IGlzCi8vIGVuY3J5cHRlZC4KLy8KLy8gb2xkcGFzcyBtdXN0IGJlIHRoZSBjdXJyZW50IHBhc3NwaHJhc2UgdXNlZCBmb3IgZW5jcnlwdGlvbiwKLy8gZ2V0TmV3cGFzcyBpcyBhIGZ1bmN0aW9uIHRvIGdldCB0aGUgcGFzc3BocmFzZSB0byBwZXJtYW5lbnRseSByZXBsYWNlCi8vIHRoZSBjdXJyZW50IHBhc3NwaHJhc2UKZnVuYyAoa2IgZGJLZXliYXNlKSBVcGRhdGUobmFtZSwgb2xkcGFzcyBzdHJpbmcsIGdldE5ld3Bhc3MgZnVuYygpIChzdHJpbmcsIGVycm9yKSkgZXJyb3IgewoJaW5mbywgZXJyIDo9IGtiLkdldChuYW1lKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIGVycgoJfQoKCXN3aXRjaCBpIDo9IGluZm8uKHR5cGUpIHsKCWNhc2UgbG9jYWxJbmZvOgoJCWxpbmZvIDo9IGkKCgkJa2V5LCBlcnIgOj0gbWludGtleS5VbmFybW9yRGVjcnlwdFByaXZLZXkobGluZm8uUHJpdktleUFybW9yLCBvbGRwYXNzKQoJCWlmIGVyciAhPSBuaWwgewoJCQlyZXR1cm4gZXJyCgkJfQoKCQluZXdwYXNzLCBlcnIgOj0gZ2V0TmV3cGFzcygpCgkJaWYgZXJyICE9IG5pbCB7CgkJCXJldHVybiBlcnIKCQl9CgoJCWtiLndyaXRlTG9jYWxLZXkobmFtZSwga2V5LCBuZXdwYXNzKQoJCXJldHVybiBuaWwKCglkZWZhdWx0OgoJCXJldHVybiBmbXQuRXJyb3JmKCZxdW90O2xvY2FsbHkgc3RvcmVkIGtleSByZXF1aXJlZC4gUmVjZWl2ZWQ6ICV2JnF1b3Q7LCByZWZsZWN0LlR5cGVPZihpbmZvKS5TdHJpbmcoKSkKCX0KfQoKLy8gQ2xvc2VEQiByZWxlYXNlcyB0aGUgbG9jayBhbmQgY2xvc2VzIHRoZSBzdG9yYWdlIGJhY2tlbmQuCmZ1bmMgKGtiIGRiS2V5YmFzZSkgQ2xvc2VEQigpIHsKCWtiLmRiLkNsb3NlKCkKfQoKZnVuYyAoa2IgZGJLZXliYXNlKSB3cml0ZUxvY2FsS2V5KG5hbWUgc3RyaW5nLCBwcml2IHRtY3J5cHRvLlByaXZLZXksIHBhc3NwaHJhc2Ugc3RyaW5nKSBJbmZvIHsKCS8vIGVuY3J5cHQgcHJpdmF0ZSBrZXkgdXNpbmcgcGFzc3BocmFzZQoJcHJpdkFybW9yIDo9IG1pbnRrZXkuRW5jcnlwdEFybW9yUHJpdktleShwcml2LCBwYXNzcGhyYXNlKQoKCS8vIG1ha2UgSW5mbwoJcHViIDo9IHByaXYuUHViS2V5KCkKCWluZm8gOj0gbmV3TG9jYWxJbmZvKG5hbWUsIHB1YiwgcHJpdkFybW9yKQoKCWtiLndyaXRlSW5mbyhuYW1lLCBpbmZvKQoJcmV0dXJuIGluZm8KfQoKZnVuYyAoa2IgZGJLZXliYXNlKSB3cml0ZUluZm8obmFtZSBzdHJpbmcsIGluZm8gSW5mbykgewoJLy8gd3JpdGUgdGhlIGluZm8gYnkga2V5CglrZXkgOj0gaW5mb0tleShuYW1lKQoJc2VyaWFsaXplZEluZm8gOj0gbWFyc2hhbEluZm8oaW5mbykKCglrYi5kYi5TZXRTeW5jKGtleSwgc2VyaWFsaXplZEluZm8pCgoJLy8gc3RvcmUgYSBwb2ludGVyIHRvIHRoZSBpbmZva2V5IGJ5IGFkZHJlc3MgZm9yIGZhc3QgbG9va3VwCglrYi5kYi5TZXRTeW5jKGFkZHJLZXkoaW5mby5HZXRBZGRyZXNzKCkpLCBrZXkpCn0KCmZ1bmMgYWRkcktleShhZGRyZXNzIHR5cGVzLkFjY0FkZHJlc3MpIFtdYnl0ZSB7CglyZXR1cm4gW11ieXRlKGZtdC5TcHJpbnRmKCZxdW90OyVzLiVzJnF1b3Q7LCBhZGRyZXNzLlN0cmluZygpLCBhZGRyZXNzU3VmZml4KSkKfQoKZnVuYyBpbmZvS2V5KG5hbWUgc3RyaW5nKSBbXWJ5dGUgewoJcmV0dXJuIFtdYnl0ZShmbXQuU3ByaW50ZigmcXVvdDslcy4lcyZxdW90OywgbmFtZSwgaW5mb1N1ZmZpeCkpCn0K"}})],1),g._v(" "),l("p",[g._v("A few notes on the "),l("code",[g._v("Keybase")]),g._v(" methods as implemented in "),l("code",[g._v("dbKeybase")]),g._v(":")]),g._v(" "),l("ul",[l("li",[l("code",[g._v("Sign(name, passphrase string, msg []byte) ([]byte, crypto.PubKey, error)")]),g._v(" strictly deals with the signature of the "),l("code",[g._v("message")]),g._v(" bytes. Some preliminary work should be done beforehand to prepare and encode the "),l("code",[g._v("message")]),g._v("  into a canonical "),l("code",[g._v("[]byte")]),g._v(" form. See an example of "),l("code",[g._v("message")]),g._v(" preparation from the "),l("code",[g._v("auth")]),g._v(" module. Note that signature verification is not implemented in the SDK by default. It is deferred to the "),l("a",{attrs:{href:"#antehandler"}},[l("code",[g._v("anteHandler")])]),g._v(".\n"),l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gQnVpbGRTaWduTXNnIGJ1aWxkcyBhIHNpbmdsZSBtZXNzYWdlIHRvIGJlIHNpZ25lZCBmcm9tIGEgVHhCdWlsZGVyIGdpdmVuIGEKLy8gc2V0IG9mIG1lc3NhZ2VzLiBJdCByZXR1cm5zIGFuIGVycm9yIGlmIGEgZmVlIGlzIHN1cHBsaWVkIGJ1dCBjYW5ub3QgYmUKLy8gcGFyc2VkLgpmdW5jIChibGRyIFR4QnVpbGRlcikgQnVpbGRTaWduTXNnKG1zZ3MgW11zZGsuTXNnKSAoU3RkU2lnbk1zZywgZXJyb3IpIHsKCWlmIGJsZHIuY2hhaW5JRCA9PSAmcXVvdDsmcXVvdDsgewoJCXJldHVybiBTdGRTaWduTXNne30sIGZtdC5FcnJvcmYoJnF1b3Q7Y2hhaW4gSUQgcmVxdWlyZWQgYnV0IG5vdCBzcGVjaWZpZWQmcXVvdDspCgl9CgoJZmVlcyA6PSBibGRyLmZlZXMKCWlmICFibGRyLmdhc1ByaWNlcy5Jc1plcm8oKSB7CgkJaWYgIWZlZXMuSXNaZXJvKCkgewoJCQlyZXR1cm4gU3RkU2lnbk1zZ3t9LCBlcnJvcnMuTmV3KCZxdW90O2Nhbm5vdCBwcm92aWRlIGJvdGggZmVlcyBhbmQgZ2FzIHByaWNlcyZxdW90OykKCQl9CgoJCWdsRGVjIDo9IHNkay5OZXdEZWMoaW50NjQoYmxkci5nYXMpKQoKCQkvLyBEZXJpdmUgdGhlIGZlZXMgYmFzZWQgb24gdGhlIHByb3ZpZGVkIGdhcyBwcmljZXMsIHdoZXJlCgkJLy8gZmVlID0gY2VpbChnYXNQcmljZSAqIGdhc0xpbWl0KS4KCQlmZWVzID0gbWFrZShzZGsuQ29pbnMsIGxlbihibGRyLmdhc1ByaWNlcykpCgkJZm9yIGksIGdwIDo9IHJhbmdlIGJsZHIuZ2FzUHJpY2VzIHsKCQkJZmVlIDo9IGdwLkFtb3VudC5NdWwoZ2xEZWMpCgkJCWZlZXNbaV0gPSBzZGsuTmV3Q29pbihncC5EZW5vbSwgZmVlLkNlaWwoKS5Sb3VuZEludCgpKQoJCX0KCX0KCglyZXR1cm4gU3RkU2lnbk1zZ3sKCQlDaGFpbklEOiAgICAgICBibGRyLmNoYWluSUQsCgkJQWNjb3VudE51bWJlcjogYmxkci5hY2NvdW50TnVtYmVyLAoJCVNlcXVlbmNlOiAgICAgIGJsZHIuc2VxdWVuY2UsCgkJTWVtbzogICAgICAgICAgYmxkci5tZW1vLAoJCU1zZ3M6ICAgICAgICAgIG1zZ3MsCgkJRmVlOiAgICAgICAgICAgTmV3U3RkRmVlKGJsZHIuZ2FzLCBmZWVzKSwKCX0sIG5pbAp9"}})],1),g._v(" "),l("li",[l("code",[g._v("CreateMnemonic(name string, language Language, passwd string, algo SigningAlgo) (info Info, seed string, err error)")]),g._v(" creates a new mnemonic and prints it in the logs, but it "),l("strong",[g._v("does not persist it on disk")]),g._v(".")]),g._v(" "),l("li",[l("code",[g._v("CreateAccount(name, mnemonic, bip39Passwd, encryptPasswd string, account uint32, index uint32) (Info, error)")]),g._v(" creates a new account based on the "),l("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[l("code",[g._v("bip44 path")]),l("OutboundLink")],1),g._v(" and persists it on disk (note that the "),l("code",[g._v("PrivKey")]),g._v(" is "),l("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/7d7821b9af132b0f6131640195326aa02b6751db/crypto/keys/mintkey/mintkey.go",target:"_blank",rel:"noopener noreferrer"}},[g._v("encrypted with a passphrase before being persisted"),l("OutboundLink")],1),g._v(", it is "),l("strong",[g._v("never stored unencrypted")]),g._v("). In the context of this method, the "),l("code",[g._v("account")]),g._v(" and "),l("code",[g._v("address")]),g._v(" parameters refer to the segment of the BIP44 derivation path (e.g. "),l("code",[g._v("0")]),g._v(", "),l("code",[g._v("1")]),g._v(", "),l("code",[g._v("2")]),g._v(", ...) used to derive the "),l("code",[g._v("PrivKey")]),g._v(" and "),l("code",[g._v("PubKey")]),g._v(" from the mnemonic (note that given the same mnemonic and "),l("code",[g._v("account")]),g._v(", the same "),l("code",[g._v("PrivKey")]),g._v(" will be generated, and given the same "),l("code",[g._v("account")]),g._v(" and "),l("code",[g._v("address")]),g._v(", the same "),l("code",[g._v("PubKey")]),g._v(" and "),l("code",[g._v("Address")]),g._v(" will be generated). Finally, note that the "),l("code",[g._v("CreateAccount")]),g._v(" method derives keys and addresses using "),l("code",[g._v("secp256k1")]),g._v(" as implemented in the "),l("a",{attrs:{href:"https://github.com/tendermint/tendermint/tree/bc572217c07b90ad9cee851f193aaa8e9557cbc7/crypto/secp256k1",target:"_blank",rel:"noopener noreferrer"}},[g._v("Tendermint library"),l("OutboundLink")],1),g._v(". As a result, it only works for creating account keys and addresses, not consensus keys. See "),l("a",{attrs:{href:"#addresses"}},[l("code",[g._v("Addresses")])]),g._v(" for more.")])]),g._v(" "),l("p",[g._v("The current implementation of "),l("code",[g._v("dbKeybase")]),g._v(" is basic and does not offer on-demand locking. If an instance of "),l("code",[g._v("dbKeybase")]),g._v(" is created, the underlying "),l("code",[g._v("db")]),g._v(" is locked meaning no other process can access it besides the one in which it was instantiated. This is the reason why the default SDK client uses another implementation of the "),l("code",[g._v("Keybase")]),g._v(" interface called "),l("code",[g._v("lazyKeybase")]),g._v(":")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"cGFja2FnZSBrZXlzCgppbXBvcnQgKAoJJnF1b3Q7Zm10JnF1b3Q7CgoJJnF1b3Q7Z2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvY3J5cHRvJnF1b3Q7CgljbW4gJnF1b3Q7Z2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvbGlicy9jb21tb24mcXVvdDsKCgkmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2NyeXB0by9rZXlzL2hkJnF1b3Q7CglzZGsgJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcyZxdW90OwopCgp2YXIgXyBLZXliYXNlID0gbGF6eUtleWJhc2V7fQoKLy8gTk9URTogbGF6eUtleWJhc2Ugd2lsbCBiZSBkZXByZWNhdGVkIGluIGZhdm9yIG9mIGxhenlLZXliYXNlS2V5cmluZy4KdHlwZSBsYXp5S2V5YmFzZSBzdHJ1Y3QgewoJbmFtZSBzdHJpbmcKCWRpciAgc3RyaW5nCn0KCi8vIE5ldyBjcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIGEgbGF6eSBrZXliYXNlLgpmdW5jIE5ldyhuYW1lLCBkaXIgc3RyaW5nKSBLZXliYXNlIHsKCWlmIGVyciA6PSBjbW4uRW5zdXJlRGlyKGRpciwgMDcwMCk7IGVyciAhPSBuaWwgewoJCXBhbmljKGZtdC5TcHJpbnRmKCZxdW90O2ZhaWxlZCB0byBjcmVhdGUgS2V5YmFzZSBkaXJlY3Rvcnk6ICVzJnF1b3Q7LCBlcnIpKQoJfQoKCXJldHVybiBsYXp5S2V5YmFzZXtuYW1lOiBuYW1lLCBkaXI6IGRpcn0KfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBMaXN0KCkgKFtdSW5mbywgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5MaXN0KCkKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBHZXQobmFtZSBzdHJpbmcpIChJbmZvLCBlcnJvcikgewoJZGIsIGVyciA6PSBzZGsuTmV3TGV2ZWxEQihsa2IubmFtZSwgbGtiLmRpcikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoJZGVmZXIgZGIuQ2xvc2UoKQoKCXJldHVybiBuZXdEQktleWJhc2UoZGIpLkdldChuYW1lKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIEdldEJ5QWRkcmVzcyhhZGRyZXNzIHNkay5BY2NBZGRyZXNzKSAoSW5mbywgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5HZXRCeUFkZHJlc3MoYWRkcmVzcykKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBEZWxldGUobmFtZSwgcGFzc3BocmFzZSBzdHJpbmcsIHNraXBQYXNzIGJvb2wpIGVycm9yIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuRGVsZXRlKG5hbWUsIHBhc3NwaHJhc2UsIHNraXBQYXNzKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIFNpZ24obmFtZSwgcGFzc3BocmFzZSBzdHJpbmcsIG1zZyBbXWJ5dGUpIChbXWJ5dGUsIGNyeXB0by5QdWJLZXksIGVycm9yKSB7CglkYiwgZXJyIDo9IHNkay5OZXdMZXZlbERCKGxrYi5uYW1lLCBsa2IuZGlyKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIG5pbCwgbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5TaWduKG5hbWUsIHBhc3NwaHJhc2UsIG1zZykKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBDcmVhdGVNbmVtb25pYyhuYW1lIHN0cmluZywgbGFuZ3VhZ2UgTGFuZ3VhZ2UsIHBhc3N3ZCBzdHJpbmcsIGFsZ28gU2lnbmluZ0FsZ28pIChpbmZvIEluZm8sIHNlZWQgc3RyaW5nLCBlcnIgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCAmcXVvdDsmcXVvdDssIGVycgoJfQoJZGVmZXIgZGIuQ2xvc2UoKQoKCXJldHVybiBuZXdEQktleWJhc2UoZGIpLkNyZWF0ZU1uZW1vbmljKG5hbWUsIGxhbmd1YWdlLCBwYXNzd2QsIGFsZ28pCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgQ3JlYXRlQWNjb3VudChuYW1lLCBtbmVtb25pYywgYmlwMzlQYXNzd2QsIGVuY3J5cHRQYXNzd2Qgc3RyaW5nLCBhY2NvdW50IHVpbnQzMiwgaW5kZXggdWludDMyKSAoSW5mbywgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5DcmVhdGVBY2NvdW50KG5hbWUsIG1uZW1vbmljLCBiaXAzOVBhc3N3ZCwgZW5jcnlwdFBhc3N3ZCwgYWNjb3VudCwgaW5kZXgpCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgRGVyaXZlKG5hbWUsIG1uZW1vbmljLCBiaXAzOVBhc3N3ZCwgZW5jcnlwdFBhc3N3ZCBzdHJpbmcsIHBhcmFtcyBoZC5CSVA0NFBhcmFtcykgKEluZm8sIGVycm9yKSB7CglkYiwgZXJyIDo9IHNkay5OZXdMZXZlbERCKGxrYi5uYW1lLCBsa2IuZGlyKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIG5pbCwgZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuRGVyaXZlKG5hbWUsIG1uZW1vbmljLCBiaXAzOVBhc3N3ZCwgZW5jcnlwdFBhc3N3ZCwgcGFyYW1zKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIENyZWF0ZUxlZGdlcihuYW1lIHN0cmluZywgYWxnbyBTaWduaW5nQWxnbywgaHJwIHN0cmluZywgYWNjb3VudCwgaW5kZXggdWludDMyKSAoaW5mbyBJbmZvLCBlcnIgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5DcmVhdGVMZWRnZXIobmFtZSwgYWxnbywgaHJwLCBhY2NvdW50LCBpbmRleCkKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBDcmVhdGVPZmZsaW5lKG5hbWUgc3RyaW5nLCBwdWJrZXkgY3J5cHRvLlB1YktleSkgKGluZm8gSW5mbywgZXJyIGVycm9yKSB7CglkYiwgZXJyIDo9IHNkay5OZXdMZXZlbERCKGxrYi5uYW1lLCBsa2IuZGlyKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIG5pbCwgZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuQ3JlYXRlT2ZmbGluZShuYW1lLCBwdWJrZXkpCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgQ3JlYXRlTXVsdGkobmFtZSBzdHJpbmcsIHB1YmtleSBjcnlwdG8uUHViS2V5KSAoaW5mbyBJbmZvLCBlcnIgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5DcmVhdGVNdWx0aShuYW1lLCBwdWJrZXkpCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgVXBkYXRlKG5hbWUsIG9sZHBhc3Mgc3RyaW5nLCBnZXROZXdwYXNzIGZ1bmMoKSAoc3RyaW5nLCBlcnJvcikpIGVycm9yIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuVXBkYXRlKG5hbWUsIG9sZHBhc3MsIGdldE5ld3Bhc3MpCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgSW1wb3J0KG5hbWUgc3RyaW5nLCBhcm1vciBzdHJpbmcpIChlcnIgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuSW1wb3J0KG5hbWUsIGFybW9yKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIEltcG9ydFByaXZLZXkobmFtZSBzdHJpbmcsIGFybW9yIHN0cmluZywgcGFzc3BocmFzZSBzdHJpbmcpIGVycm9yIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuSW1wb3J0UHJpdktleShuYW1lLCBhcm1vciwgcGFzc3BocmFzZSkKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBJbXBvcnRQdWJLZXkobmFtZSBzdHJpbmcsIGFybW9yIHN0cmluZykgKGVyciBlcnJvcikgewoJZGIsIGVyciA6PSBzZGsuTmV3TGV2ZWxEQihsa2IubmFtZSwgbGtiLmRpcikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5JbXBvcnRQdWJLZXkobmFtZSwgYXJtb3IpCn0KCmZ1bmMgKGxrYiBsYXp5S2V5YmFzZSkgRXhwb3J0KG5hbWUgc3RyaW5nKSAoYXJtb3Igc3RyaW5nLCBlcnIgZXJyb3IpIHsKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIobGtiLm5hbWUsIGxrYi5kaXIpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gJnF1b3Q7JnF1b3Q7LCBlcnIKCX0KCWRlZmVyIGRiLkNsb3NlKCkKCglyZXR1cm4gbmV3REJLZXliYXNlKGRiKS5FeHBvcnQobmFtZSkKfQoKZnVuYyAobGtiIGxhenlLZXliYXNlKSBFeHBvcnRQdWJLZXkobmFtZSBzdHJpbmcpIChhcm1vciBzdHJpbmcsIGVyciBlcnJvcikgewoJZGIsIGVyciA6PSBzZGsuTmV3TGV2ZWxEQihsa2IubmFtZSwgbGtiLmRpcikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiAmcXVvdDsmcXVvdDssIGVycgoJfQoJZGVmZXIgZGIuQ2xvc2UoKQoKCXJldHVybiBuZXdEQktleWJhc2UoZGIpLkV4cG9ydFB1YktleShuYW1lKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIEV4cG9ydFByaXZhdGVLZXlPYmplY3QobmFtZSBzdHJpbmcsIHBhc3NwaHJhc2Ugc3RyaW5nKSAoY3J5cHRvLlByaXZLZXksIGVycm9yKSB7CglkYiwgZXJyIDo9IHNkay5OZXdMZXZlbERCKGxrYi5uYW1lLCBsa2IuZGlyKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIG5pbCwgZXJyCgl9CglkZWZlciBkYi5DbG9zZSgpCgoJcmV0dXJuIG5ld0RCS2V5YmFzZShkYikuRXhwb3J0UHJpdmF0ZUtleU9iamVjdChuYW1lLCBwYXNzcGhyYXNlKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIEV4cG9ydFByaXZLZXkobmFtZSBzdHJpbmcsIGRlY3J5cHRQYXNzcGhyYXNlIHN0cmluZywKCWVuY3J5cHRQYXNzcGhyYXNlIHN0cmluZykgKGFybW9yIHN0cmluZywgZXJyIGVycm9yKSB7CgoJZGIsIGVyciA6PSBzZGsuTmV3TGV2ZWxEQihsa2IubmFtZSwgbGtiLmRpcikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiAmcXVvdDsmcXVvdDssIGVycgoJfQoJZGVmZXIgZGIuQ2xvc2UoKQoKCXJldHVybiBuZXdEQktleWJhc2UoZGIpLkV4cG9ydFByaXZLZXkobmFtZSwgZGVjcnlwdFBhc3NwaHJhc2UsIGVuY3J5cHRQYXNzcGhyYXNlKQp9CgpmdW5jIChsa2IgbGF6eUtleWJhc2UpIENsb3NlREIoKSB7fQo="}})],1),g._v(" "),l("p",[l("code",[g._v("lazyKeybase")]),g._v(" is simple wrapper around "),l("code",[g._v("dbKeybase")]),g._v(" which locks the database only when operations are to be performed and unlocks it immediately after. With the "),l("code",[g._v("lazyKeybase")]),g._v(", it is possible for the "),l("RouterLink",{attrs:{to:"/interfaces/cli.html"}},[g._v("command-line interface")]),g._v(" to create a new account while the "),l("RouterLink",{attrs:{to:"/interfaces/rest.html"}},[g._v("rest server")]),g._v(" is running. It is also possible to pipe multiple CLI commands.")],1),g._v(" "),l("h2",{attrs:{id:"addresses-and-pubkeys"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#addresses-and-pubkeys"}},[g._v("#")]),g._v(" Addresses and PubKeys")]),g._v(" "),l("p",[l("code",[g._v("Addresses")]),g._v(" and "),l("code",[g._v("PubKey")]),g._v("s are both public information that identify actors in the application. There are 3 main types of "),l("code",[g._v("Addresses")]),g._v("/"),l("code",[g._v("PubKeys")]),g._v(" available by default in the Cosmos SDK:")]),g._v(" "),l("ul",[l("li",[g._v("Addresses and Keys for "),l("strong",[g._v("accounts")]),g._v(", which identify users (e.g. the sender of a "),l("code",[g._v("message")]),g._v("). They are derived using the "),l("strong",[l("code",[g._v("secp256k1")])]),g._v(" curve.")]),g._v(" "),l("li",[g._v("Addresses and Keys for "),l("strong",[g._v("validator operators")]),g._v(", which identify the operators of validators. They are derived using the "),l("strong",[l("code",[g._v("secp256k1")])]),g._v(" curve.")]),g._v(" "),l("li",[g._v("Addresses and Keys for "),l("strong",[g._v("consensus nodes")]),g._v(", which identify the validator nodes participating in consensus. They are derived using the "),l("strong",[l("code",[g._v("ed25519")])]),g._v(" curve.")])]),g._v(" "),l("table",[l("thead",[l("tr",[l("th"),g._v(" "),l("th",[g._v("Address bech32 Prefix")]),g._v(" "),l("th",[g._v("Pubkey bech32 Prefix")]),g._v(" "),l("th",[g._v("Curve")]),g._v(" "),l("th",[g._v("Address byte length")]),g._v(" "),l("th",[g._v("Pubkey byte length")])])]),g._v(" "),l("tbody",[l("tr",[l("td",[g._v("Accounts")]),g._v(" "),l("td",[g._v("cosmos")]),g._v(" "),l("td",[g._v("cosmospub")]),g._v(" "),l("td",[l("code",[g._v("secp256k1")])]),g._v(" "),l("td",[l("code",[g._v("20")])]),g._v(" "),l("td",[l("code",[g._v("33")])])]),g._v(" "),l("tr",[l("td",[g._v("Validator Operator")]),g._v(" "),l("td",[g._v("cosmosvaloper")]),g._v(" "),l("td",[g._v("cosmosvaloperpub")]),g._v(" "),l("td",[l("code",[g._v("secp256k1")])]),g._v(" "),l("td",[l("code",[g._v("20")])]),g._v(" "),l("td",[l("code",[g._v("33")])])]),g._v(" "),l("tr",[l("td",[g._v("Consensus Nodes")]),g._v(" "),l("td",[g._v("cosmosvalcons")]),g._v(" "),l("td",[g._v("cosmosvalconspub")]),g._v(" "),l("td",[l("code",[g._v("ed25519")])]),g._v(" "),l("td",[l("code",[g._v("20")])]),g._v(" "),l("td",[l("code",[g._v("32")])])])])]),g._v(" "),l("h3",{attrs:{id:"pubkeys"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#pubkeys"}},[g._v("#")]),g._v(" PubKeys")]),g._v(" "),l("p",[l("code",[g._v("PubKey")]),g._v("s used in the Cosmos SDK follow the "),l("code",[g._v("Pubkey")]),g._v(" interface defined in tendermint's "),l("code",[g._v("crypto")]),g._v(" package:")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBQdWJLZXkgaW50ZXJmYWNlIHsKCUFkZHJlc3MoKSBBZGRyZXNzCglCeXRlcygpIFtdYnl0ZQoJVmVyaWZ5Qnl0ZXMobXNnIFtdYnl0ZSwgc2lnIFtdYnl0ZSkgYm9vbAoJRXF1YWxzKFB1YktleSkgYm9vbAp9"}})],1),g._v(" "),l("p",[g._v("For "),l("code",[g._v("secp256k1")]),g._v(" keys, the actual implementation can be found "),l("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/bc572217c07b90ad9cee851f193aaa8e9557cbc7/crypto/secp256k1/secp256k1.go#L140",target:"_blank",rel:"noopener noreferrer"}},[g._v("here"),l("OutboundLink")],1),g._v(". For "),l("code",[g._v("ed25519")]),g._v(" keys, it can be found "),l("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/bc572217c07b90ad9cee851f193aaa8e9557cbc7/crypto/ed25519/ed25519.go#L135",target:"_blank",rel:"noopener noreferrer"}},[g._v("here"),l("OutboundLink")],1),g._v(".")]),g._v(" "),l("p",[g._v("Note that in the Cosmos SDK, "),l("code",[g._v("Pubkeys")]),g._v(" are not manipulated in their raw form. Instead, they are double encoded using "),l("RouterLink",{attrs:{to:"/core/encoding.html#amino"}},[l("code",[g._v("Amino")])]),g._v(" and "),l("a",{attrs:{href:"https://en.bitcoin.it/wiki/Bech32",target:"_blank",rel:"noopener noreferrer"}},[l("code",[g._v("bech32")]),l("OutboundLink")],1),g._v(". In the SDK is done by first calling the "),l("code",[g._v("Bytes()")]),g._v(" method on the raw "),l("code",[g._v("Pubkey")]),g._v(" (which applies amino encoding), and then the "),l("code",[g._v("ConvertAndEncode")]),g._v(" method of "),l("code",[g._v("bech32")]),g._v(".")],1),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyBCZWNoMzJpZnlBY2NQdWIocHViIGNyeXB0by5QdWJLZXkpIChzdHJpbmcsIGVycm9yKSB7CgliZWNoMzJQcmVmaXhBY2NQdWIgOj0gR2V0Q29uZmlnKCkuR2V0QmVjaDMyQWNjb3VudFB1YlByZWZpeCgpCglyZXR1cm4gYmVjaDMyLkNvbnZlcnRBbmRFbmNvZGUoYmVjaDMyUHJlZml4QWNjUHViLCBwdWIuQnl0ZXMoKSkKfQoKLy8gTXVzdEJlY2gzMmlmeUFjY1B1YiByZXR1cm5zIHRoZSByZXN1bHQgb2YgQmVjaDMyaWZ5QWNjUHViIHBhbmljaW5nIG9uIGZhaWx1cmUuCmZ1bmMgTXVzdEJlY2gzMmlmeUFjY1B1YihwdWIgY3J5cHRvLlB1YktleSkgc3RyaW5nIHsKCWVuYywgZXJyIDo9IEJlY2gzMmlmeUFjY1B1YihwdWIpCglpZiBlcnIgIT0gbmlsIHsKCQlwYW5pYyhlcnIpCgl9CgoJcmV0dXJuIGVuYwp9CgovLyBCZWNoMzJpZnlWYWxQdWIgcmV0dXJucyBhIEJlY2gzMiBlbmNvZGVkIHN0cmluZyBjb250YWluaW5nIHRoZQovLyBCZWNoMzJQcmVmaXhWYWxQdWIgcHJlZml4IGZvciBhIGdpdmVuIHZhbGlkYXRvciBvcGVyYXRvcidzIFB1YktleS4KZnVuYyBCZWNoMzJpZnlWYWxQdWIocHViIGNyeXB0by5QdWJLZXkpIChzdHJpbmcsIGVycm9yKSB7CgliZWNoMzJQcmVmaXhWYWxQdWIgOj0gR2V0Q29uZmlnKCkuR2V0QmVjaDMyVmFsaWRhdG9yUHViUHJlZml4KCkKCXJldHVybiBiZWNoMzIuQ29udmVydEFuZEVuY29kZShiZWNoMzJQcmVmaXhWYWxQdWIsIHB1Yi5CeXRlcygpKQp9CgovLyBNdXN0QmVjaDMyaWZ5VmFsUHViIHJldHVybnMgdGhlIHJlc3VsdCBvZiBCZWNoMzJpZnlWYWxQdWIgcGFuaWNpbmcgb24gZmFpbHVyZS4KZnVuYyBNdXN0QmVjaDMyaWZ5VmFsUHViKHB1YiBjcnlwdG8uUHViS2V5KSBzdHJpbmcgewoJZW5jLCBlcnIgOj0gQmVjaDMyaWZ5VmFsUHViKHB1YikKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gZW5jCn0KCi8vIEJlY2gzMmlmeUNvbnNQdWIgcmV0dXJucyBhIEJlY2gzMiBlbmNvZGVkIHN0cmluZyBjb250YWluaW5nIHRoZQovLyBCZWNoMzJQcmVmaXhDb25zUHViIHByZWZpeGZvciBhIGdpdmVuIGNvbnNlbnN1cyBub2RlJ3MgUHViS2V5LgpmdW5jIEJlY2gzMmlmeUNvbnNQdWIocHViIGNyeXB0by5QdWJLZXkpIChzdHJpbmcsIGVycm9yKSB7CgliZWNoMzJQcmVmaXhDb25zUHViIDo9IEdldENvbmZpZygpLkdldEJlY2gzMkNvbnNlbnN1c1B1YlByZWZpeCgpCglyZXR1cm4gYmVjaDMyLkNvbnZlcnRBbmRFbmNvZGUoYmVjaDMyUHJlZml4Q29uc1B1YiwgcHViLkJ5dGVzKCkpCn0KCi8vIE11c3RCZWNoMzJpZnlDb25zUHViIHJldHVybnMgdGhlIHJlc3VsdCBvZiBCZWNoMzJpZnlDb25zUHViIHBhbmljaW5nIG9uCi8vIGZhaWx1cmUuCmZ1bmMgTXVzdEJlY2gzMmlmeUNvbnNQdWIocHViIGNyeXB0by5QdWJLZXkpIHN0cmluZyB7CgllbmMsIGVyciA6PSBCZWNoMzJpZnlDb25zUHViKHB1YikKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gZW5jCn0KCi8vIEdldEFjY1B1YktleUJlY2gzMiBjcmVhdGVzIGEgUHViS2V5IGZvciBhbiBhY2NvdW50IHdpdGggYSBnaXZlbiBwdWJsaWMga2V5Ci8vIHN0cmluZyB1c2luZyB0aGUgQmVjaDMyIEJlY2gzMlByZWZpeEFjY1B1YiBwcmVmaXguCmZ1bmMgR2V0QWNjUHViS2V5QmVjaDMyKHB1YmtleSBzdHJpbmcpIChwayBjcnlwdG8uUHViS2V5LCBlcnIgZXJyb3IpIHsKCWJlY2gzMlByZWZpeEFjY1B1YiA6PSBHZXRDb25maWcoKS5HZXRCZWNoMzJBY2NvdW50UHViUHJlZml4KCkKCWJ6LCBlcnIgOj0gR2V0RnJvbUJlY2gzMihwdWJrZXksIGJlY2gzMlByZWZpeEFjY1B1YikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoKCXBrLCBlcnIgPSBjcnlwdG9BbWluby5QdWJLZXlGcm9tQnl0ZXMoYnopCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCglyZXR1cm4gcGssIG5pbAp9CgovLyBNdXN0R2V0QWNjUHViS2V5QmVjaDMyIHJldHVybnMgdGhlIHJlc3VsdCBvZiBHZXRBY2NQdWJLZXlCZWNoMzIgcGFuaWNpbmcgb24KLy8gZmFpbHVyZS4KZnVuYyBNdXN0R2V0QWNjUHViS2V5QmVjaDMyKHB1YmtleSBzdHJpbmcpIChwayBjcnlwdG8uUHViS2V5KSB7CglwaywgZXJyIDo9IEdldEFjY1B1YktleUJlY2gzMihwdWJrZXkpCglpZiBlcnIgIT0gbmlsIHsKCQlwYW5pYyhlcnIpCgl9CgoJcmV0dXJuIHBrCn0KCi8vIEdldFZhbFB1YktleUJlY2gzMiBjcmVhdGVzIGEgUHViS2V5IGZvciBhIHZhbGlkYXRvcidzIG9wZXJhdG9yIHdpdGggYSBnaXZlbgovLyBwdWJsaWMga2V5IHN0cmluZyB1c2luZyB0aGUgQmVjaDMyIEJlY2gzMlByZWZpeFZhbFB1YiBwcmVmaXguCmZ1bmMgR2V0VmFsUHViS2V5QmVjaDMyKHB1YmtleSBzdHJpbmcpIChwayBjcnlwdG8uUHViS2V5LCBlcnIgZXJyb3IpIHsKCWJlY2gzMlByZWZpeFZhbFB1YiA6PSBHZXRDb25maWcoKS5HZXRCZWNoMzJWYWxpZGF0b3JQdWJQcmVmaXgoKQoJYnosIGVyciA6PSBHZXRGcm9tQmVjaDMyKHB1YmtleSwgYmVjaDMyUHJlZml4VmFsUHViKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIG5pbCwgZXJyCgl9CgoJcGssIGVyciA9IGNyeXB0b0FtaW5vLlB1YktleUZyb21CeXRlcyhieikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoKCXJldHVybiBwaywgbmlsCn0KCi8vIE11c3RHZXRWYWxQdWJLZXlCZWNoMzIgcmV0dXJucyB0aGUgcmVzdWx0IG9mIEdldFZhbFB1YktleUJlY2gzMiBwYW5pY2luZyBvbgovLyBmYWlsdXJlLgpmdW5jIE11c3RHZXRWYWxQdWJLZXlCZWNoMzIocHVia2V5IHN0cmluZykgKHBrIGNyeXB0by5QdWJLZXkpIHsKCXBrLCBlcnIgOj0gR2V0VmFsUHViS2V5QmVjaDMyKHB1YmtleSkKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gcGsKfQoKLy8gR2V0Q29uc1B1YktleUJlY2gzMiBjcmVhdGVzIGEgUHViS2V5IGZvciBhIGNvbnNlbnN1cyBub2RlIHdpdGggYSBnaXZlbiBwdWJsaWMKLy8ga2V5IHN0cmluZyB1c2luZyB0aGUgQmVjaDMyIEJlY2gzMlByZWZpeENvbnNQdWIgcHJlZml4LgpmdW5jIEdldENvbnNQdWJLZXlCZWNoMzIocHVia2V5IHN0cmluZykgKHBrIGNyeXB0by5QdWJLZXksIGVyciBlcnJvcikgewoJYmVjaDMyUHJlZml4Q29uc1B1YiA6PSBHZXRDb25maWcoKS5HZXRCZWNoMzJDb25zZW5zdXNQdWJQcmVmaXgoKQoJYnosIGVyciA6PSBHZXRGcm9tQmVjaDMyKHB1YmtleSwgYmVjaDMyUHJlZml4Q29uc1B1YikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoKCXBrLCBlcnIgPSBjcnlwdG9BbWluby5QdWJLZXlGcm9tQnl0ZXMoYnopCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCglyZXR1cm4gcGssIG5pbAp9CgovLyBNdXN0R2V0Q29uc1B1YktleUJlY2gzMiByZXR1cm5zIHRoZSByZXN1bHQgb2YgR2V0Q29uc1B1YktleUJlY2gzMiBwYW5pY2luZyBvbgovLyBmYWlsdXJlLgpmdW5jIE11c3RHZXRDb25zUHViS2V5QmVjaDMyKHB1YmtleSBzdHJpbmcpIChwayBjcnlwdG8uUHViS2V5KSB7CglwaywgZXJyIDo9IEdldENvbnNQdWJLZXlCZWNoMzIocHVia2V5KQoJaWYgZXJyICE9IG5pbCB7CgkJcGFuaWMoZXJyKQoJfQoKCXJldHVybiBwawp9CgovLyBHZXRGcm9tQmVjaDMyIGRlY29kZXMgYSBieXRlc3RyaW5nIGZyb20gYSBCZWNoMzIgZW5jb2RlZCBzdHJpbmcuCmZ1bmMgR2V0RnJvbUJlY2gzMihiZWNoMzJzdHIsIHByZWZpeCBzdHJpbmcpIChbXWJ5dGUsIGVycm9yKSB7CglpZiBsZW4oYmVjaDMyc3RyKSA9PSAwIHsKCQlyZXR1cm4gbmlsLCBlcnJvcnMuTmV3KCZxdW90O2RlY29kaW5nIEJlY2gzMiBhZGRyZXNzIGZhaWxlZDogbXVzdCBwcm92aWRlIGFuIGFkZHJlc3MmcXVvdDspCgl9CgoJaHJwLCBieiwgZXJyIDo9IGJlY2gzMi5EZWNvZGVBbmRDb252ZXJ0KGJlY2gzMnN0cikKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoKCWlmIGhycCAhPSBwcmVmaXggewoJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoJnF1b3Q7aW52YWxpZCBCZWNoMzIgcHJlZml4OyBleHBlY3RlZCAlcywgZ290ICVzJnF1b3Q7LCBwcmVmaXgsIGhycCkKCX0KCglyZXR1cm4gYnosIG5pbAp9"}})],1),g._v(" "),l("h3",{attrs:{id:"addresses"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#addresses"}},[g._v("#")]),g._v(" Addresses")]),g._v(" "),l("p",[g._v("The Cosmos SDK comes by default with 3 types of addresses:")]),g._v(" "),l("ul",[l("li",[l("code",[g._v("AccAddress")]),g._v(" for accounts.")]),g._v(" "),l("li",[l("code",[g._v("ValAddress")]),g._v(" for validator operators.")]),g._v(" "),l("li",[l("code",[g._v("ConsAddress")]),g._v(" for validator nodes.")])]),g._v(" "),l("p",[g._v("Each of these address types are an alias for an hex-encoded "),l("code",[g._v("[]byte")]),g._v(" array of length 20. Here is the standard way to obtain an address "),l("code",[g._v("aa")]),g._v(" from a "),l("code",[g._v("Pubkey pub")]),g._v(":")]),g._v(" "),l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YWEgOj0gc2RrLkFjY0FkZHJlc3MocHViLkFkZHJlc3MoKS5CeXRlcygpKQo="}}),g._v(" "),l("p",[g._v("These addresses implement the "),l("code",[g._v("Address")]),g._v(" interface:")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gQWRkcmVzcyBpcyBhIGNvbW1vbiBpbnRlcmZhY2UgZm9yIGRpZmZlcmVudCB0eXBlcyBvZiBhZGRyZXNzZXMgdXNlZCBieSB0aGUgU0RLCnR5cGUgQWRkcmVzcyBpbnRlcmZhY2UgewoJRXF1YWxzKEFkZHJlc3MpIGJvb2wKCUVtcHR5KCkgYm9vbAoJTWFyc2hhbCgpIChbXWJ5dGUsIGVycm9yKQoJTWFyc2hhbEpTT04oKSAoW11ieXRlLCBlcnJvcikKCUJ5dGVzKCkgW11ieXRlCglTdHJpbmcoKSBzdHJpbmcKCUZvcm1hdChzIGZtdC5TdGF0ZSwgdmVyYiBydW5lKQp9"}})],1),g._v(" "),l("p",[g._v("Of note, the "),l("code",[g._v("Marhsal()")]),g._v(" and "),l("code",[g._v("Bytes()")]),g._v(" method both return the same raw "),l("code",[g._v("[]byte")]),g._v(" form of the address, the former being needed for Protobuff compatibility. Also, the "),l("code",[g._v("String()")]),g._v(" method is used to return the "),l("code",[g._v("bech32")]),g._v(" encoded form of the address, which should be the only address format with which end-user interract. Next is an example:")]),g._v(" "),l("p",[l("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gU3RyaW5nIGltcGxlbWVudHMgdGhlIFN0cmluZ2VyIGludGVyZmFjZS4KZnVuYyAoYWEgQWNjQWRkcmVzcykgU3RyaW5nKCkgc3RyaW5nIHsKCWlmIGFhLkVtcHR5KCkgewoJCXJldHVybiAmcXVvdDsmcXVvdDsKCX0KCgliZWNoMzJQcmVmaXhBY2NBZGRyIDo9IEdldENvbmZpZygpLkdldEJlY2gzMkFjY291bnRBZGRyUHJlZml4KCkKCgliZWNoMzJBZGRyLCBlcnIgOj0gYmVjaDMyLkNvbnZlcnRBbmRFbmNvZGUoYmVjaDMyUHJlZml4QWNjQWRkciwgYWEuQnl0ZXMoKSkKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCglyZXR1cm4gYmVjaDMyQWRkcgp9"}})],1),g._v(" "),l("h2",{attrs:{hide:"",id:"next"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[g._v("#")]),g._v(" Next")]),g._v(" "),l("p",{attrs:{hide:""}},[g._v("Learn about "),l("RouterLink",{attrs:{to:"/basics/gas-fees.html"}},[g._v("gas and fees")])],1)],1)}),[],!1,null,null,null);I.default=C.exports}}]);